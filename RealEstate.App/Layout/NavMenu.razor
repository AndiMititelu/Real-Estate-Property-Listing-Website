@using RealEstate.App.Contracts
@using Microsoft.AspNetCore.Components.Authorization
@using RealEstate.App.ViewModels
@inject ITokenService tokenService
@inject IAuthenticationService authService




<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">RealEstate.App</a>
        <button title="Navigation menu" class="navbar-toggler">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable">
    <nav class="flex-column">
        <CascadingAuthenticationState>
            <!-- Render link for non-logged-in users -->
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <AuthorizeView>
                <Authorized>
                    <!-- Render links for authenticated users -->
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="listingsoverview">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Listings
                        </NavLink>
                    </div>

                    @if (role == "User")
                    {
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="addproperty">
                                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Add Property
                            </NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="myproperties">
                                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> My Properties
                            </NavLink>
                        </div>
                    }


                    <!-- Render links only for users with admin role -->
                     @if (role == "Admin")
                    {
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/admin/useroverview">
                                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Inspect Users
                            </NavLink>
                        </div>
                    }

                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/updateuser">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> My Profile
                        </NavLink>
                    </div>
                </Authorized>
            </AuthorizeView>
        </CascadingAuthenticationState>
    </nav>
</div>




@code {

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public IUserService UserService { get; set; }

    public UserViewModel? User { get; set; }

    private bool collapseNavMenu = false;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private string? role = "";

    private string? token = "";

    protected override async Task OnInitializedAsync()
    {
        token = await tokenService.GetTokenAsync();
        if(String.IsNullOrWhiteSpace(token))
        {
            Console.WriteLine("Nobody is logged in yet");
            return;
        }
        //role = await tokenService.GetRoleFromTokenAsync();
        var loggedUsername = authService.DecodeUsernameFromTokenAsync(token);
        User = await UserService.GetUser(loggedUsername.Result.ToString());
        Console.WriteLine($"ROL Curent din NAVMenu: {User.Roles[0]}");
        role = User.Roles[0];
    }


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}

@page "/addlisting"
@using RealEstate.App.Contracts
@using RealEstate.App.ViewModels

<h3>New Listing</h3>

<EditForm Model="@ListingViewModel" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />
    <ValidationSummary></ValidationSummary>

    <div class="row mb-3 ms-2">
        <label for="title" class="col-sm-3 form-label">Listing title:</label>
        <div class="col-sm-5">
            <InputText id="title" class="form-control" @bind-Value="@ListingViewModel.Title" placeholder="Enter listing title"></InputText>
            <ValidationMessage For="@(() => ListingViewModel.Title)" />
        </div>
    </div>

    <!-- Additional fields specific to a listing, e.g., availability dates, conditions -->

    <div class="row mb-3 ms-2">
        <label for="price" class="col-sm-3 form-label">Price:</label>
        <div class="col-sm-5">
            <InputNumber id="price" class="form-control" @bind-Value="@ListingViewModel.Price"></InputNumber>
            <ValidationMessage For="@(() => ListingViewModel.Price)" />
        </div>
    </div>

    <div class="row mb-3 ms-2">
        <!-- Other listing-specific fields here -->
    </div>

    <div class="row mb-3 ms-2">
        <div class="col-sm-3"></div>
        <div class="col-sm-5">
            <button type="submit" class="btn btn-success me-2">Save listing</button>
            <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </div>
    </div>
</EditForm>

@if (!string.IsNullOrWhiteSpace(Message))
{
    <div class="alert alert-info ms-2">
        @Message
    </div>
}

@code {
    [Inject]
    public IListingDataService ListingDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public ListingViewModel ListingViewModel { get; set; } = new ListingViewModel();

    public string Message { get; set; }

    private async Task HandleValidSubmit()
    {
        var result = await ListingDataService.CreateListingAsync(ListingViewModel);
        if (result.IsSuccess)
        {
            Message = "Listing created successfully";
            NavigationManager.NavigateTo("/listingoverview");
        }
        else
        {
            Message = result.Message;
            if (!string.IsNullOrWhiteSpace(result.ValidationErrors))
            {
                Message += result.ValidationErrors;
            }
        }
    }

    private void Cancel()
    {
        // Consider adding a confirmation dialog or message before navigating
        NavigationManager.NavigateTo("/listingoverview");
    }
}

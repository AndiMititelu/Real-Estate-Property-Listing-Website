@page "/findproperty/{title}"
@using RealEstate.App.Contracts
@using RealEstate.App.ViewModels
@inject ITokenService tokenService
@inject IPropertyDataService PropertyDataService
@inject IAuthenticationService authService

@if (Property != null)
{
    <h3>@Property.Title</h3>
    <div class="card mt-3">
        <div class="card-body">

            <p class="card-text"><strong>Description:</strong> @Property.Description</p>
            <p class="card-text"><strong>Address:</strong> @Property.Address</p>
            <p class="card-text"><strong>Size:</strong> @Property.Size</p>
            <p class="card-text"><strong>Price:</strong> @Property.Price</p>
            <p class="card-text"><strong>Bedrooms:</strong> @Property.NumberOfBedrooms</p>
            <p class="card-text"><strong>Bathrooms:</strong> @Property.NumberOfBathrooms</p>
            <p class="card-text"><strong>Contact number:</strong> @userViewModel.PhoneNumber</p>
            <p class="card-text"><strong>Email:</strong> @userViewModel.Email</p>

            <!-- and other property details -->
            
            @if (showEdit)
            {
                <button class="btn btn-primary" @onclick="() => NavigateToEdit(Property.Title)">Edit</button>
            }
        </div>
    </div>
}
else if (SearchAttempted)
{
    <p>No property found with the specified title.</p>
}

@code {
    private string PropertyName { get; set; } = string.Empty;
    private PropertyDto Property { get; set; }
    private bool SearchAttempted { get; set; } = false;
    private bool showEdit { get; set; } = false;
    private string phoneNumber { get; set; } = string.Empty;
    UpdateUserViewModel userViewModel { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Parameter]
    public string title { get; set; }



    protected override async Task OnInitializedAsync()
    {
        PropertyName = NavigationManager.Uri.Split('/').LastOrDefault();
        string loggedInUsername = await tokenService.GetUsernameFromTokenAsync();

        Property = await PropertyDataService.GetPropertyByNameAsync(PropertyName);

        userViewModel = await authService.GetUser(Property.UserId);
        Console.WriteLine("USERUL ESTE AICI: ", userViewModel.Username); // Aici e GOL
    }

    private void NavigateToEdit(string propertyTitle)
    {
        NavigationManager.NavigateTo($"/updateproperty/{propertyTitle}");
    }

}

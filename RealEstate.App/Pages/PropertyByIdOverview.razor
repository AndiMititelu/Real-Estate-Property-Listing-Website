@page "/findproperty"
@using RealEstate.App.Contracts
@using RealEstate.App.ViewModels

@inject IPropertyDataService PropertyDataService

<h3>Find Property</h3>

<div class="row mb-2">
    <div class="col-md-6">
        <input @bind="PropertyName" class="form-control" placeholder="Enter property name" />
    </div>
    <div class="col-md-6">
        <button @onclick="SearchProperty" class="btn btn-primary">Search</button>
    </div>
</div>

@if (Property != null)
{
    <div class="card mt-3">
        <div class="card-body">
            <h5 class="card-title">@Property.title</h5>
            <p class="card-text">@Property.description</p>
            <p class="card-text"><strong>Address:</strong> @Property.address</p>
            <p class="card-text"><strong>Size:</strong> @Property.size</p>
            <p class="card-text"><strong>Price:</strong> @Property.price</p>
            <p class="card-text"><strong>Bedrooms:</strong> @Property.numberOfBedrooms</p>
            <p class="card-text"><strong>Bathrooms:</strong> @Property.numberOfBathrooms</p>
            <!-- Add more property details as needed -->
        </div>
    </div>
}
else if (SearchAttempted)
{
    <p>No property found with the name '@PropertyName'.</p>
}

@code {
    private string PropertyName { get; set; } = string.Empty;
    private PropertyDto Property { get; set; }
    private bool SearchAttempted { get; set; } = false;

    private async Task SearchProperty()
    {
        SearchAttempted = true;
        Property = await PropertyDataService.GetPropertyByNameAsync(PropertyName);
    }
}

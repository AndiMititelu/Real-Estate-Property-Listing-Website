@page "/propertyoverview"
@using RealEstate.App.Contracts
@using RealEstate.App.ViewModels

<h3 class="mt-4 mb-4">Property Overview</h3>

<br />

<p><input class="custom-checkbox" type="checkbox" id="includeHistory" @onchange="OnIncludeHistoryChanged" /> Include past events?</p>

@if (Properties == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Property Title</th>
                <th>Address</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var property in Properties)
            {
                <tr>
                    <td>@property.Title</td>
                    <td>@property.Address</td>
                    <td>@property.Price</td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => ViewDetails(property.PropertyId)">View Details</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject]
    public IPropertyDataService PropertyDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public List<PropertyViewModel> Properties { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Properties = (await PropertyDataService.GetPropertiesAsync()).ToList();
    }

    private void OnIncludeHistoryChanged(ChangeEventArgs e)
    {
        if ((bool)e.Value)
        {
            NavigationManager.NavigateTo("/propertyoverview?includeHistory=true");
        }
        else
        {
            NavigationManager.NavigateTo("/propertyoverview");
        }
    }

    private void ViewDetails(Guid propertyId)
    {
        NavigationManager.NavigateTo($"/propertydetails/{propertyId}");
    }
}

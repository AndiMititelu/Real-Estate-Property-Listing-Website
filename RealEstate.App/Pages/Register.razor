@page "/register"
@using RealEstate.App.Auth
@using RealEstate.App.ViewModels
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<style>
    .cool-form {
        background: rgba(255, 255, 255, 0.8); /* Semi-transparent white */
        color: #333; /* Dark text color for contrast */
        border-radius: 4px;
        padding: 45px 60px;
        margin-top: 25px;
    }

    .cool-input {
        height: 3rem;
        border-radius: 3px;
        color: #333;
        border: 2px solid #3498db; /* Blue accent */
        background: rgba(255, 255, 255, 0.8); /* Semi-transparent white */
        font-size: 13px;
        outline: none;
    }

        .cool-input:focus, .cool-input:active {
            border: 1px solid #3498db; /* Blue accent */
            color: #333;
            background: rgba(255, 255, 255, 0.8); /* Semi-transparent white */
            outline: none;
            box-shadow: 0 0 5px #3498db; /* Blue accent */
        }

    .toast-container {
        position: fixed;
        bottom: 0;
        end: 0;
        padding: 3rem;
    }

    .toast {
        background: #f5f5f5;
        color: red;
        border: 1px solid #ccc;
    }

    .btn-close {
        color: #3498db; /* Blue accent */
    }

    .toast-header {
        background: #f5f5f5;
        border-bottom: 1px solid #ccc;
    }

    .toast-body {
        color: red;
    }

    .cool-link {
        color: #3498db; /* Blue accent */
        text-decoration: none;
    }

    .form-signup {
        width: 30rem;
        height: 90vh;
    }

    body {
        background: url('/homebg.jpg') no-repeat center center fixed;
        -webkit-background-size: cover;
        -moz-background-size: cover;
        -o-background-size: cover;
        background-size: cover;
    }
</style>

<div class="container text-center py-5">
    <div class="row justify-content-center">
        <div class="col-md-4 cool-form">
            <h1 class="display-4">Register</h1>

            <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerRequest">
                <DataAnnotationsValidator />

                <div class="mb-3">
                    <label for="inputUsername" class="form-label cool-label">Username</label>
                    <InputText id="inputUsername" class="form-control cool-input" @bind-Value="registerRequest.Username" autofocus placeholder="Username" />
                    <ValidationMessage For="@(() => registerRequest.Username)" />
                </div>

                <div class="mb-3">
                    <label for="inputName" class="form-label cool-label">Name</label>
                    <InputText id="inputName" class="form-control cool-input" @bind-Value="registerRequest.Name" placeholder="Name" />
                    <ValidationMessage For="@(() => registerRequest.Name)" />
                </div>

                <div class="mb-3">
                    <label for="inputEmail" class="form-label cool-label">Email</label>
                    <InputText type="email" id="inputEmail" class="form-control cool-input" @bind-Value="registerRequest.Email" placeholder="Email" />
                    <ValidationMessage For="@(() => registerRequest.Email)" />
                </div>

                <div class="mb-3">
                    <label for="inputPassword" class="form-label cool-label">Password</label>
                    <InputText type="password" id="inputPassword" class="form-control cool-input" placeholder="Password" @bind-Value="registerRequest.Password" />
                    <ValidationMessage For="@(() => registerRequest.Password)" />
                </div>

                <div class="mb-3">
                    <label for="inputConfirmedPassword" class="form-label cool-label">Confirm Password</label>
                    <InputText type="password" id="inputConfirmedPassword" class="form-control cool-input" placeholder="Confirm Password" @bind-Value="registerRequest.ConfirmedPassword" />
                    <ValidationMessage For="@(() => registerRequest.ConfirmedPassword)" />
                </div>

                <div class="row justify-content-center">
                    <div class="col-md-6">
                        <button class="btn btn-lg btn-block btn-outline-primary" type="submit">Register</button>
                    </div>
                </div>
                <NavLink href="login" class="text-center cool-link">
                    <h6 class="cool-link">Back to login</h6>
                </NavLink>
            </EditForm>
        </div>
    </div>
</div>


@code {
    RegisterViewModel registerRequest { get; set; } = new RegisterViewModel();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            // Add password confirmation check here
            if (registerRequest.Password != registerRequest.ConfirmedPassword)
            {
                throw new ApplicationException("Password and Confirmed Password must match.");
            }

            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    private void NavigateToLogin()
    {
        navigationManager.NavigateTo("/login");
    }

    private void DismissError()
    {
        error = null;
    }
}

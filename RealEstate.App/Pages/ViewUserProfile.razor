@page "/admin/user/{username}"
@using RealEstate.App.ViewModels
@using RealEstate.App.Contracts
@inject IJSRuntime JSRuntime



<style scoped>
    .profile-container {
        font-family: Arial, sans-serif;
        max-width: 600px;
        margin: auto;
        padding: 20px;
        border: 1px solid #eee;
        border-radius: 5px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        background-color: #f8f9fa;
    }

    .profile-header {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
        border-bottom: 1px solid #dee2e6;
        padding-bottom: 10px;
    }

    .profile-header-icon {
        font-size: 2em;
        margin-right: 10px;
    }

    .profile-field {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .profile-field-icon {
        margin-right: 10px;
    }

    .user-not-found {
        color: #9b9b9b;
        text-align: center;
    }

    .delete-button {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
    }
</style>

<div class="container mt-5">
    <h3>User Profile</h3>

    @if (User != null)
    {
        <div class="profile-container">
            <div class="profile-header">
                <i class="fas fa-user profile-header-icon"></i>
                <h4>@User.Username</h4>
            </div>
            <div class="profile-field">
                <i class="fas fa-address-card profile-field-icon"></i>
                <p>Name: @User.Name</p>
            </div>
            <div class="profile-field">
                <i class="fas fa-envelope profile-field-icon"></i>
                <p>Email: @User.Email</p>
            </div>
            <div class="profile-field">
                <i class="fas fa-phone profile-field-icon"></i>
                <p>Phone Number: @User.PhoneNumber</p>
            </div>
            <div class="delete-button">
                <button class="btn btn-danger" @onclick="() => DeleteUser(User.Username)"><i class="fas fa-trash"></i> Delete User</button>
            </div>
        </div>
    }
    else
    {
        <p class="user-not-found"><i class="fas fa-exclamation-circle"></i> User not found.</p>
    }
</div>

@code {

    [Inject]
    public IUserService UserService { get; set; }

    [Inject]
    public IPropertyDataService PropertyDataService { get; set; }

    [Inject]
    public IListingDataService ListingDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Parameter]
    public string username { get; set; }

    private UserViewModel User { get; set; }

    private List<ListingViewModel> Listings { get; set; }

    private List<PropertyViewModel> Properties { get; set; }

    protected override async Task OnInitializedAsync()
    {
        User = await UserService.GetUser(username);
    }

    private async Task DeleteUser(string username)
    {
        bool confirmDelete = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this user?");
        if (confirmDelete)
        {
            var response = await UserService.DeleteUser(username);
            if (response.IsSuccess)
            {
                NavigationManager.NavigateTo("/admin/useroverview");
            }
            else
            {
                Console.WriteLine($"Error deleting user: {response.Message}");
                return;
            }
        }

    }

}